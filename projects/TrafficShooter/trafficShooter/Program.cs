using EZInput;

namespace trafficShooter
{
    class Program
    {
        static void Main(string[] args)
        {
            char[,] console = new char[37, 95];
            Player player = new Player(27, 26);
            Enemy[] enemies = new Enemy[3];
            //enemies[0] = new Enemy(3, 2, new string[] {$"   _{(char)220}___{(char)220}_   ",
            //                                            "  /_______\\  ",
            //                                            " /         \\ ",
            //                                            "[|  |   |  |]",
            //                                            " |   \\_/   | ",
            //                                            " |         | ",
            //                                            " |  /---\\  | ",
            //                                            "[|__|   |__|]",
            //                                            " \\_________/ ",});
            //enemies[1] = new Enemy(29, 2, new string[] {$"   _{(char)220}___{(char)220}_   ",
            //                                            "  /_______\\  ",
            //                                            " /         \\ ",
            //                                            "[|  \\___/  |]",
            //                                            " |   |_|   | ",
            //                                            " |         | ",
            //                                            " |  /___\\  | ",
            //                                            "[|_/_____\\_|]",
            //                                            " \\_________/ "});
            //enemies[2] = new Enemy(52, 2, new string[] {$"   _{(char)220}___{(char)220}_   ",
            //                                            "  /_______\\  ",
            //                                            " /         \\ ",
            //                                            "[| |     | |]",
            //                                            " | |_____| | ",
            //                                            " |         | ",
            //                                            " |  /---\\  | ",
            //                                            "[|_|     |_|]",
            //                                            " \\_________/ "});
            int lax = 23, lbx = 46, ly = 1;
            int e_lax = 23, e_lbx = 46, e_ly = 1;
            int speed = 30;

            Initializer(ref console,ref enemies);
            printArray(console);
            enemies[0].PrintEnemy();
            enemies[1].PrintEnemy();
            enemies[2].PrintEnemy();
            player.PrintPlayer();
            Updater(console, player, "print");
            int iteration = 1;
            while (true)
            {
                Thread.Sleep(100);
                move_lines(iteration, ref lax, ref lbx, ref ly, ref e_lax, ref e_lbx, ref e_ly);

                iteration++;
                if (iteration == 999)
                    iteration = 10;
                // if this reduce line lenght will reduce
                if (Keyboard.IsKeyPressed(Key.LeftArrow))
                    player.moveCarLeft(console);
                if (Keyboard.IsKeyPressed(Key.RightArrow))
                    player.moveCarRight(console);
                if (Keyboard.IsKeyPressed(Key.UpArrow))
                {
                    player.moveCarUp(iteration, console);
                    if ((speed > 10) && (iteration % 5 == 0))
                    {
                        speed--;
                    }
                }
                if (Keyboard.IsKeyPressed(Key.DownArrow))
                {
                    player.moveCarDown(iteration, console);
                    if ((speed < 30) && (iteration % 5 == 0))
                    {
                        speed++;
                    }
                }
                else
                {
                    if ((iteration % 100 == 0) && (speed < 30))
                        speed++;
                }
                Enemy1Movement(iteration, console, enemies[0], player);
                Enemy2Movement(iteration, console, enemies[1], player);
                Enemy3Movement(iteration, console, enemies[2], player);
            }
            //Console.SetCursorPosition(0, 40);
            //Console.WriteLine("Fetching Car....");
            //for (int i = 0; i < 9; i++)
            //{
            //    for (int j = 0; j < 13; j++)
            //        Console.Write(console[enemy.Y[0] + i, Ex[0] + j]);
            //    Console.WriteLine();
            //}
            //Console.SetCursorPosition(0, 50);
            //Console.WriteLine("Fetching Car....");
            //for (int i = 0; i < 9; i++)
            //{
            //    for (int j = 0; j < 13; j++)
            //        Console.Write(console[enemy.Y[1] + i, Ex[1] + j]);
            //    Console.WriteLine();
            //}
            //Console.SetCursorPosition(0, 60);
            //Console.WriteLine("Fetching Car....");
            //for (int i = 0; i < 9; i++)
            //{
            //    for (int j = 0; j < 13; j++)
            //        Console.Write(console[enemy.Y[2] + i, enemy3.X + j]);
            //    Console.WriteLine();
            //}
        }
        static void printArray(char[,] array)
        {
            for (int i = 0; i < array.GetLength(0); i++)
            {
                for (int j = 0; j < array.GetLength(1); j++)
                    Console.Write(array[i, j]);
                Console.WriteLine();
            }
        }
        static void Initializer(ref char[,] console, ref Enemy[] enemies)
        {
            enemies[0] = new Enemy(3, 2, new string[] {$"   _{(char)220}___{(char)220}_   ",
                                                        "  /_______\\  ",
                                                        " /         \\ ",
                                                        "[|  |   |  |]",
                                                        " |   \\_/   | ",
                                                        " |         | ",
                                                        " |  /---\\  | ",
                                                        "[|__|   |__|]",
                                                        " \\_________/ ",});
            enemies[1] = new Enemy(29, 2, new string[] {$"   _{(char)220}___{(char)220}_   ",
                                                        "  /_______\\  ",
                                                        " /         \\ ",
                                                        "[|  \\___/  |]",
                                                        " |   |_|   | ",
                                                        " |         | ",
                                                        " |  /___\\  | ",
                                                        "[|_/_____\\_|]",
                                                        " \\_________/ "});
            enemies[2] = new Enemy(52, 2, new string[] {$"   _{(char)220}___{(char)220}_   ",
                                                        "  /_______\\  ",
                                                        " /         \\ ",
                                                        "[| |     | |]",
                                                        " | |_____| | ",
                                                        " |         | ",
                                                        " |  /---\\  | ",
                                                        "[|_|     |_|]",
                                                        " \\_________/ "});
            console = new char[,]{
                { '#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#'},
                    { '|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
                    { '|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ','-','-','S','T','A','T','I','C','S','-','-',' ',' ',' ',' ',' ',' ','|'},
                    { '|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
                    { '|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ','S','C','O','R','E',' ',':',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
                    { '|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ','H','E','A','L','T','H',':','@','@','@','@','@','@','@','@','@','@',' ',' ',' ',' ','|'},
                    { '|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ','D','A','M','A','G','E',':',' ','1','x',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
                    { '|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
                    { '|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ','E','N','E','M','Y',' ','1',' ','h','e','a','l','t','h',':','@','@','@','@',' ',' ','|'},
                    { '|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ','E','N','E','M','Y',' ','2',' ','h','e','a','l','t','h',':','@','@','@','@',' ',' ','|'},
                    { '|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ','E','N','E','M','Y',' ','3',' ','h','e','a','l','t','h',':','@','@','@','@',' ',' ','|'},
                    { '|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
                    { '|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','|'},
                    { '|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
                    { '|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
                    { '|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
                    { '|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
                    { '|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
                    { '|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
                    { '|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
                    { '|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','|'},
                    { '|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
                    { '|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ','-','-','M','E','N','U','-','-',' ',' ',' ',' ',' ',' ',' ',' ','|'},
                    { '|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
                    { '|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ','P','r','e','s','s',' ','0',' ','t','o',' ','s','t','a','r','t',' ',' ',' ',' ',' ','|'},
                    { '|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ','P','r','e','s','s',' ','1',' ','f','o','r',' ','M','a','i','n','M','e','n','u',' ','|'},
                    { '|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ','P','r','e','s','s',' ','2',' ','t','o',' ','e','x','i','t',' ',' ',' ',' ',' ',' ','|'},
                    { '|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
                    { '|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ','-','-','C','O','N','T','R','O','L','S','-','-',' ',' ',' ',' ',' ',' ','|'},
                    { '|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
                    { '|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ','A','c','c','e','l','e','r','a','t','e',':',' ','u','p',' ','k','e','y',' ',' ',' ','|'},
                    { '|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ','B','r','e','a','k',':',' ','d','o','w','n',' ','k','e','y',' ',' ',' ',' ',' ',' ','|'},
                    { '|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ','L','e','f','t',':',' ','d','o','w','n',' ','k','e','y',' ',' ',' ',' ',' ',' ',' ','|'},
                    { '|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ','R','i','g','h','t',':',' ','d','o','w','n',' ','k','e','y',' ',' ',' ',' ',' ',' ','|'},
                    { '|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ','S','h','o','o','t',':',' ','s','p','a','c','e',' ','b','a','r',' ',' ',' ',' ',' ','|'},
                    { '|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|'},
                    { '#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#'}
            };
            // 37X95
        }
        public static void Updater(char[,] console, Player player, string operation)
        {
            if (operation == "erase")
            {
                for (int i = 0; i < 9; i++)
                    for (int j = 0; j < 14; j++)
                        if (player.Y + i < console.GetLength(0) && player.X + j < console.GetLength(1))
                        {
                            console[player.Y + i, player.X + j] = ' ';
                        }
            }
            else if (operation == "print")
            {
                for (int i = 0; i < 9; i++)
                    for (int j = 0; j < 13; j++)
                        if (player.Y + i < console.GetLength(0) && player.X + j < console.GetLength(1))
                        {
                            console[player.Y + i, player.X + j] = player.Vehicle[i][j];
                        }

            }
        }
        public static void Updater(char[,] console, Enemy enemy, string operation)
        {
            if (operation == "erase")
            {
                for (int i = 0; i < 9; i++)
                    for (int j = 0; j < 14; j++)
                        if (enemy.Y + i < console.GetLength(0) && enemy.X + j < console.GetLength(1))
                        {
                            console[enemy.Y + i, enemy.X + j] = ' ';
                        }
            }
            else if (operation == "print")
            {
                for (int i = 0; i < 9; i++)
                    for (int j = 0; j < 13; j++)
                        if (enemy.Y + i < console.GetLength(0) && enemy.X + j < console.GetLength(1))
                        {
                            console[enemy.Y + i, enemy.X + j] = enemy.Vehicle[i][j];
                        }

            }
        }
        static void Enemy1Movement(int i, char[,] console, Enemy enemy1, Player player)
        { // vertical
            Program.Updater(console, enemy1, "erase");
            enemy1.EraseEnemy();
            //if (life[2] || life[1])
            //{

            if (i % 6 == 0)
            {
                if (enemy1.Y < 11)
                    enemy1.MoveDown(console);
            }
            //}
            //else
            //{
            //    if (console[enemy.Y[1] - 1,Ex[0] + 3] == ' ' && i % 6 == 0)
            //    {
            //        if (enemy.Y[0] > 2)
            //            enemy.Y[0]--;
            //    }
            //    if (i % 2 == 0)
            //    {

            //        if (Px - 3 < Ex[0])
            //        {
            //            if (console[enemy.Y[0],Ex[0] - 1] == ' ' && Ex[0] > 1)
            //                Ex[0]--;
            //        }
            //        else if (Px - 3 > Ex[0])
            //        {
            //            if (console[enemy.Y[0],Ex[0] + 15] == ' ' && Ex[0] < 43)
            //                Ex[0]++;
            //        }
            //    }
            //}
            Program.Updater(console, enemy1, "print");
            enemy1.PrintEnemy();
        }
        static void Enemy2Movement(int i, char[,] console, Enemy enemy2, Player player)
        { // diagonal
            Program.Updater(console, enemy2, "erase");
            enemy2.EraseEnemy();
            //if (life[2])
            //{
            if (i % 6 == 0)
            {
                if (enemy2.Y < 13)
                    enemy2.MoveDown(console);
            }
            if ((enemy2.X < 52) && (i % 6 == 0))
                enemy2.MoveRight(console);
            //}
            //else
            //{
            //    if (console[enemy.Y[1] - 1,Ex[1] + 3] == ' ' && i % 6 == 0)
            //    {
            //        if (enemy.Y[1] > 2)
            //            enemy.Y[1]--;
            //    }
            //    if (i % 3 == 0)
            //    {

            //        if (Px + 3 < Ex[1])
            //        {
            //            if (console[enemy.Y[1],Ex[1] - 1] == ' ' && Ex[1] > 20)
            //                Ex[1]--;
            //        }
            //        else if (Px + 1 > Ex[1])
            //        {
            //            if (console[enemy.Y[1],Ex[1] + 15] == ' ' && Ex[1] < 65)
            //                Ex[1]++;
            //        }
            //    }
            //}
            Program.Updater(console, enemy2, "print");
            enemy2.PrintEnemy();
        }

        static void Enemy3Movement(int i, char[,] console, Enemy enemy3, Player player)
        { // horizontal
            Program.Updater(console, enemy3, "erase");
            enemy3.EraseEnemy();
            if (i % 4 == 0)
            {
                if (player.X + 3 < enemy3.X)
                {

                    if (enemy3.X > 20)
                        enemy3.MoveLeft(console);
                }
                else if (player.X + 1 > enemy3.X)
                {
                    if (enemy3.X < 43)
                        enemy3.MoveRight(console);
                }
            }
            Program.Updater(console, enemy3, "print");
            enemy3.PrintEnemy();
        }
        static void print_lines(ref int lax, ref int lbx, ref int ly)
        {
            char line = (char)219;
            Console.SetCursorPosition(lax, ly);
            Console.Write(line);
            Console.SetCursorPosition(lbx, ly);
            Console.Write(line);
            ly++;
            if (ly == 36)
                ly = 1;
        }

        static void erase_lines(ref int e_lax, ref int e_lbx, ref int e_ly)
        {

            Console.SetCursorPosition(e_lax, e_ly);
            Console.Write(" ");
            Console.SetCursorPosition(e_lbx, e_ly);
            Console.Write(" ");
            e_ly++;
            if (e_ly == 36)
                e_ly = 1;
        }

        static void move_lines(int erase_permit, ref int lax, ref int lbx, ref int ly, ref int e_lax, ref int e_lbx, ref int e_ly)
        {

            print_lines(ref lax, ref lbx, ref ly);
            if (erase_permit > 9) // decides the lenght of lines
                erase_lines(ref e_lax, ref e_lbx, ref e_ly);
        }
    }
}


